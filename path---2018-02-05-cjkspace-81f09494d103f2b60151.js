webpackJsonp([0xbff9ea66c89e],{506:function(n,s){n.exports={data:{site:{siteMetadata:{title:"长天之云",author:"ambar"}},markdownRemark:{id:"/Users/lj/dev/ambar.github.com/posts/2018-02-05---cjkspace.md absPath of file >>> MarkdownRemark",html:'<h2>为什么需要 JavaScript 处理？</h2>\n<p>写普通的文案时，我们有约定如何使用空格，但动态内容的处理有两种麻烦情况：</p>\n<ol>\n<li>字符串插值，例如 <code>{nameA}赞同了{nameB}的回答</code> 有时在表达式一侧，有时在表达式两侧</li>\n<li>各个节点之间（元素或文本），例如 <code>&#x3C;Link>{name}&#x3C;/Link>赞同了回答</code> 更复杂的情况是循环中生成列表项、元素有多层有嵌套</li>\n</ol>\n<h2>添加空格的规则</h2>\n<ul>\n<li>有条件地在中英文之间插入空格，例如「Kiki 赞同了回答」</li>\n<li>标点前后不加空格，例如「《Black Mirror》」，「Black Mirror。」</li>\n<li>不格式化文本，因为格式化会删除多余空格、格式化会影响原始的内容。</li>\n</ul>\n<p>具体来说，将所有文本分成四类： CJK 字符、标点、空格、其他（西文字符），在 CJK 字符与其他（西文字符）之间添加空格，其他的情况不添加。</p>\n<h2>如何实现</h2>\n<p>对于字符归类，使用三个标准化 ES2018 正则（<a href="http://link.zhihu.com/?target=https%3A//github.com/tc39/proposal-regexp-unicode-property-escapes">unicode property escape</a>，可通过 <a href="http://link.zhihu.com/?target=https%3A//mothereff.in/regexpu">transpiler</a> 预览 ES5 转换结果）：</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">/* 标点 */</span>\n<span class="token keyword">const</span> punctuationRegex <span class="token operator">=</span> <span class="token regex">/\\p{Punctuation}/u</span>\n<span class="token comment">/* 空格 */</span>\n<span class="token keyword">const</span> spaceRegex <span class="token operator">=</span> <span class="token regex">/\\p{Separator}/u</span>\n<span class="token comment">/* CJK 字符，中日韩 */</span>\n<span class="token keyword">const</span> cjkRegex <span class="token operator">=</span> <span class="token regex">/\\p{Script=Han}|\\p{Script=Katakana}|\\p{Script=Hiragana}|\\p{Script=Hangul}/u</span>\n</code></pre>\n      </div>\n<p>对于字符串插值，可以利用模板标签（tagged template）来简化，它本质上是一个接受一组字符串和替换表达式的函数，把字符串和表达式挨个连接起来并去空，再添加空格：</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">cjkspace</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token operator">...</span>subs<span class="token punctuation">)</span> <span class="token operator">=></span>\n  <span class="token function">join</span><span class="token punctuation">(</span>\n    <span class="token function">zip</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> subs<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>c <span class="token operator">=></span> c <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token function">shouldSpace</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\' \'</span> <span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p>对于节点之间，要求是有样式的节点（如链接）首尾不能加入空格，例如结构 <code>(a > span > textA) + (span > textB)</code>，可靠的做法是将生成的文本节点放在两个文本之间的公共元素之下：</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">findCommonAncestor</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> pathA <span class="token operator">=</span> <span class="token function">unfold</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n <span class="token operator">=></span> n<span class="token punctuation">.</span>parent<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> pathB <span class="token operator">=</span> <span class="token function">unfold</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> n <span class="token operator">=></span> n<span class="token punctuation">.</span>parent<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> index <span class="token operator">=</span> pathA<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>n <span class="token operator">=></span> pathB<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token comment">// 将在 CA 下插入，在靠近 a 的一侧祖先元素之后</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>pathA<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> pathA<span class="token punctuation">[</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>以 React 为例的处理过程是，遍历 ReactNode 节点树，转化成中间节点树（收集必要信息）并往其中添加空格节点，还原中间节点树为 ReactNode 节点树。</p>\n<h2>如何使用</h2>\n<p>在字符串之间添加空格，使用模板标签：</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> cjkspace <span class="token keyword">from</span> <span class="token string">\'cjkspace\'</span>\n\n<span class="token keyword">const</span> userA <span class="token operator">=</span> <span class="token string">\'Kiki\'</span>\n<span class="token keyword">const</span> userB <span class="token operator">=</span> <span class="token string">\'喵喵\'</span>\ncjkspace<span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>userA<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">和</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>userB<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">赞同了你`</span></span>\n<span class="token comment">// => \'Kiki 和喵喵赞同了你\'</span>\n</code></pre>\n      </div>\n<p>在 React Node 之间添加空格，使用 React 组件：</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>CJKSpace<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'cjkspace/react\'</span>\n\n<span class="token operator">&lt;</span>CJKSpace<span class="token operator">></span>\n  <span class="token operator">&lt;</span>Link<span class="token operator">></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>\n  赞同了<span class="token punctuation">{</span><span class="token string">\'Coco\'</span><span class="token punctuation">}</span>的回答\n<span class="token operator">&lt;</span><span class="token operator">/</span>CJKSpace<span class="token operator">></span>\n<span class="token comment">// => &lt;a href>Kiki&lt;a> 赞同了 Coco 的回答</span>\n</code></pre>\n      </div>\n<h2>参考</h2>\n<ul>\n<li><a href="https://www.zhihu.com/question/19587406">中英文混排时中文与英文之间是否要有空格？</a></li>\n<li><a href="http://link.zhihu.com/?target=http%3A//www.unicode.org/reports/tr44/%23GC_Values_Table">http://www.unicode.org/reports/tr44/#GC<em>Values</em>Table</a></li>\n<li><a href="http://link.zhihu.com/?target=https%3A//msdn.microsoft.com/zh-cn/library/gg721767%28v%3Dexpression.40%29.aspx">MSDN text-autospace</a></li>\n</ul>',frontmatter:{title:"JavaScript 实现中英文空格",date:"2018-02-05 15:56"}}},pathContext:{slug:"/2018-02-05---cjkspace/",previous:{fields:{slug:"/2017-11-15---webkit-font-synthesis-bug/"},frontmatter:{title:"用 CSS 修复 WebKit 伪粗体问题"}},next:!1}}}});